---
name: Build Docker Image
on:
  workflow_dispatch: {}
  push:
    branches: [ master ]
jobs:
  gather-info:
    name: Gather Release Information
    runs-on: ubuntu-latest
    outputs:
      github-ref: ${{ steps.github-ref.outputs.github-ref }}
      git-tag:    ${{ steps.git-tag.outputs.git-tag }}
      docker-tag: ${{ steps.docker-tag.outputs.docker-tag }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - id: github-ref
      name: Determine GitHub Ref
      env:
        GITHUB_REF: ${{ github.ref }}
      run: |
        case "${GITHUB_REF}" in
          refs/tags/*)
            GITHUB_REF="${GITHUB_REF#refs/tags/}" ;;
          refs/pull/*)
            GITHUB_REF="${GITHUB_REF#refs/pull/}"
            GITHBU_REF="pr-${GITHUB_REF//\//-}" ;;
          refs/heads/*)
            GITHUB_REF="${GITHUB_REF#refs/heads/}"
            GITHUB_REF="${GITHUB_REF//\//-}" ;;
          *)
            echo "Unexpected GITHUB_REF ${GITHUB_REF}" >&2
            exit 1 ;;
        esac
        echo "GitHub ref found: ${GITHUB_REF}"
        echo "::set-output name=github-ref::${GITHUB_REF}"
    - id: git-tag
      name: Determine Git Tag
      run: |
        set -o errexit -o nounset -o pipefail
        OUTPUT="$(ruby build/kubecf-tools/versioning/versioning.rb)"
        echo "Using git tag ${OUTPUT}"
        echo "::set-output name=git-tag::${OUTPUT}"
    - id: docker-tag
      name: Determine Docker Tag
      run: |
        DOCKER_TAG="${GIT_TAG//+/_}"
        echo "Docker tag found: ${DOCKER_TAG}"
        echo "::set-output name=docker-tag::${DOCKER_TAG}"
      env:
        GIT_TAG: ${{ steps.git-tag.outputs.git-tag }}
  docker-image:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    needs: gather-info
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Publish Docker Image
      uses: docker/build-push-action@v1
      with:
        registry: ghcr.io
        repository: ${{ secrets.GHCR_REPOSITORY }}/eirini-dns-aliases
        username:   ${{ secrets.GHCR_USERNAME }}
        password:   ${{ secrets.GHCR_PASSWORD }}
        tags: ${{ needs.gather-info.outputs.docker-tag }},${{ github.sha }}
        labels: >-
          org.opencontainers.image.ref.name=${{ needs.gather-info.outputs.github-ref }},
          org.opencontainers.image.version=${{ needs.gather-info.outputs.git-tag }}
        always_pull: true
        add_git_labels: true
        build_args: version=${{ needs.gather-info.outputs.git-tag }}
